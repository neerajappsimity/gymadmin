{"version":3,"sources":["utility/url.constant.js","utility/core.api.js","components/Header.js","components/Sidebar.js","components/Footer.js","components/users/User.js","components/tasks/Task.js","components/users/Profile.js","components/exercises/Exercise.js","components/exercises/AddExercise.js","components/exercises/UpdateExercise.js","components/Login.js","components/users/ChangePassword.js","App.js","serviceWorker.js","index.js"],"names":["URLS","baseUrl","loginAdmin","userList","taskList","deleteTask","getProfile","editProfile","exerciseList","addExercise","updateExercise","exerciseView","changePassword","Services","params","a","Axios","post","url","data","console","log","response","status","token","headers","reponse","this","Header","props","Logout","localStorage","removeItem","window","location","reload","getprofiledata","getItem","setState","profile","renderTheProfile","profileObj","className","to","data-toggle","role","aria-haspopup","aria-expanded","src","picture","alt","width","name","onClick","state","origin","height","Component","Sidebar","target","id","aria-hidden","Footer","User","checkIfTokenAvailable","history","push","userlist","userListData","renderTheUserListingData","userListArray","map","current","index","key","email","phone","address","moment","createdAt","format","Task","tasklist","taskListData","DeleteTaskRow","value","task_id","toast","warning","msg","renderTheTaskListing","taskListArray","user","sender","title","toUpperCase","start_date","start_time","end_time","type","_id","e","Profile","renderTheProfileImage","profileObject","changeTheValueInput","UpdateProfile","newName","newAddress","newPhone","newPicture","renderTheProfileData","Form","Group","controlId","Label","Control","defaultValue","placeholder","onChange","Text","multiple","onDone","getFiles","bind","rows","Button","variant","files","base64","split","Exercise","exerciselist","exerciseListData","renderTheExerciseListing","exerciseListArray","exerciseObject","logo","description","AddExercise","changeTheValueInputt","renderTheExerciseForm","ExerciseObj","ExerciseList","UpdateExercise","ExerciseView","exercise_id","title_id","newTitle","newDescription","newLogo","match","exerciseId","Login","componentDidMount","setEmail","setPassword","password","logIn","setItem","ChangePassword","oldpassword","newpassword","confirmpassword","UpdatePassword","parames","oldPassword","newPassword","confirmPassword","success","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.644f2608.chunk.js","sourcesContent":["const URLS = {\n    \n    baseUrl: 'https://gymfitnessapp.herokuapp.com',\n    loginAdmin: '/admin/login',\n    userList: '/admin/userList',\n    taskList: '/admin/taskList',\n    deleteTask: '/admin/deleteTask',\n    getProfile : '/admin/getProfile',\n    editProfile: '/admin/editProfile',\n    exerciseList: '/admin/exerciseList',\n    addExercise: '/admin/addExercise',\n    updateExercise: '/admin/updateExercise',\n    exerciseView: '/admin/exerciseView',\n    changePassword: '/admin/changePassword'\n\n}\n\nexport default URLS;","import Axios from 'axios'\nimport URLS from './url.constant'\n\n\nclass Services {\n    constructor(params){\n        this.url = URLS.baseUrl\n        this.params = params\n\n    }\n\n    loginAdmin = async() => {\n        try {\n            let data = await Axios.post(this.url+URLS.loginAdmin,this.params,{/** token */})\n            console.log('data', data)\n            return data\n            \n        } catch (e) {\n            console.log('error is ', e)\n            if(e.response.status !== 404){\n                throw e.response\n            }\n            throw e.response\n        }\n    }\n\n    /***** USER LIST****/\n\n    userList = async(token) => {\n        try {\n            let data = await Axios.post(this.url+URLS.userList, this.params, {\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"token\": token\n                }\n            })\n            // console.log('usercore', data)\n            return data\n        }\n        catch(e) {\n            console.log('error is', e)\n            if(e.reponse.status !== 404){\n                throw e.response\n            }\n            throw e.reponse\n        }\n    }\n\n    /***** USER LIST****/\n\n    /**** TaskList ***/\n\n    taskList = async(token) => {\n        try {\n            let data = await Axios.post(this.url+URLS.taskList, this.params, {\n                headers:{\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"token\": token\n                }\n            })\n            return data\n        } \n        catch(e) {\n            console.log('error is', e)\n            if(e.reponse.status !== 404){\n                throw e.response\n            }\n            throw e.reponse\n        }\n    }\n\n    /**** TaskList ***/\n\n    deleteTask = async(token) => {\n        try {\n            let data = await Axios.post(this.url+URLS.deleteTask, this.params, {\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"token\": token\n                }\n            })\n            return data\n        } catch (e) {\n            console.log('error is', e)\n            if(e.response.status !== 404){\n                throw e.response\n            }\n            throw e.reponse\n        }\n    }\n\n    getProfile = async(token) => {\n        try {\n            let data = await Axios.post(this.url+URLS.getProfile, this.params, {\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"token\": token\n                }\n            })\n            return data\n        } catch (e) {\n            console.log('error is', e)\n            if(e.response.status !== 404){\n                throw e.response\n            }\n            throw e.reponse\n            \n        }\n    }\n    editProfile = async(token) => {\n        try {\n            let data = await Axios.post(this.url+URLS.editProfile, this.params, {\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"token\": token\n                }\n            })\n            return data\n        } catch (e) {\n            console.log('error is', e)\n            if(e.response.status !== 404){\n                throw e.response\n            }\n            throw e.reponse\n            \n        }\n    }\n\n    exerciseList = async(token) => {\n        try {\n            let data = await Axios.post(this.url+URLS.exerciseList, this.params, {\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"token\": token\n                }\n            })\n            return data\n            \n        } catch (e) {\n            console.log('error is', e)\n            if(e.response.status !== 404){\n                throw e.response\n            }\n            throw e.reponse\n            \n        }\n    }\n\n    addExercise = async(token) => {\n        try {\n            let data = await Axios.post(this.url+URLS.addExercise, this.params,{\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"token\": token\n                }\n            })\n            return data\n\n        } catch (e) {\n            console.log('error is', e)\n            if(e.response.status !== 404){\n                throw e.response\n            }\n            throw e.reponse\n        }\n    }\n\n    updateExercise = async(token) => {\n        try {\n            let data = await Axios.post(this.url+URLS.updateExercise, this.params,{\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"token\": token\n                }\n            })\n            return data\n\n        } catch (e) {\n            console.log('error is', e)\n            if(e.response.status !== 404){\n                throw e.response\n            }\n            throw e.reponse\n        }\n    }\n\n    exerciseView = async(token) => {\n        try {\n            let data = await Axios.post(this.url+URLS.exerciseView, this.params,{\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"token\": token\n                }\n            })\n            return data\n\n        } catch (e) {\n            console.log('error is', e)\n            if(e.response.status !== 404){\n                throw e.response\n            }\n            throw e.reponse\n        }\n    }\n\n    changePassword = async(token) => {\n        try {\n            let data = await Axios.post(this.url+URLS.changePassword, this.params,{\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"token\": token\n                }\n            })\n            return data\n\n        } catch (e) {\n            if(e.response.status !== 404){\n                throw e.response\n            }\n            throw e.reponse\n        }\n    }\n\n}\n\n\n\nexport default Services","import React, {Component} from 'react';\nimport { Link } from \"react-router-dom\";\nimport Services from '../utility/core.api'\n\nclass Header extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={\n            profile: {},\n        }\n    }\n\n    Logout = () => {\n        localStorage.removeItem(\"token\")\n        window.location.reload()\n    }\n    componentDidMount(){\n        this.getprofiledata()\n    }\n\n    getprofiledata = async() => {\n        try {\n            const token = localStorage.getItem(\"token\");\n            const response = await new Services().getProfile(token)\n            // console.log('response', response)\n            if(response.status === 200){\n                this.setState({\n                    profile : response.data.data\n                })\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    renderTheProfile = (profileObj) => {\n        // console.log('test', profileObj)\n        return (\n            <>\n                <ul className=\"nav navbar-top-links navbar-right pull-right\">\n                        <li>\n                            <Link className=\"nav-toggler open-close waves-effect waves-light hidden-md hidden-lg\"\n                                to=\"/\"><i className=\"fa fa-bars\"></i></Link>\n                        </li>\n                        <li className=\"dropdown\">\n                            <Link to=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><img src={profileObj.picture} alt=\"user-img\"\n                                    width=\"36\" className=\"img-circle\"></img> <b className=\"hidden-xs\">{profileObj.name}</b><span className=\"caret\"></span></Link>\n                            <ul className=\"dropdown-menu\">\n                                <li><Link to=\"/changepassword\">Change Password</Link></li>\n                                <li><Link to=\"/\" onClick={this.Logout}>Logout</Link></li>\n                            </ul>\n                        </li>\n                    </ul>\n            </>\n        )\n\n    }\n\n    render(){\n        return (\n            <>\n            <nav className=\"navbar navbar-default navbar-static-top m-b-0\">\n                <div className=\"navbar-header\">\n                    <div className=\"top-left-part\">\n                        <Link className=\"logo\" to=\"/\">\n                            <b>\n                                <img src={window.location.origin+ '/logo.jpg'} alt=\"home\" className=\"dark-logo\" height=\"50px\" width=\"50px\" />\n                                <img src={window.location.origin+ '/logo.jpg'} alt=\"home\" className=\"light-logo\" height=\"50px\" width=\"50px\" />\n                            </b>\n                            <span>\n                                Admin Panel\n                            </span> \n                        </Link>\n                    </div>\n\n                    { this.renderTheProfile(this.state.profile) }\n                    \n                </div>\n            </nav>\n            </>\n        )\n    }\n}\n\n\nexport default Header;","\nimport React, {Component} from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Sidebar extends Component {\n\n    \n    render(){\n        return (\n            <div className=\"navbar-default sidebar\" role=\"navigation\">\n                <div className=\"sidebar-nav slimscrollsidebar\">\n                    <div className=\"sidebar-head\">\n                        <h3><span className=\"fa-fw open-close\"><i className=\"ti-close ti-menu\"></i></span> <span className=\"hide-menu\">Navigation</span></h3>\n                    </div>\n                    <div className=\"center p-20\">\n                        <span target=\"_blank\" className=\"btn btn-danger btn-block waves-effect waves-light\"></span>\n                    </div>\n                    <ul className=\"nav\" id=\"side-menu\">\n                        {/* <li>\n                            <a href=\"#\" className=\"waves-effect\"><i className=\"fa fa-clock-o fa-fw\" aria-hidden=\"true\"></i></a>\n                        </li> */}\n                        <li>\n                            <Link to=\"/profile\" className=\"waves-effect\"><i className=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i>Profile</Link>\n                        </li>\n                        {/* <li>\n                            <Link to=\"/changepassword\" className=\"waves-effect\"><i className=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i>Change Password</Link>\n                        </li> */}\n                        <li>\n                            <Link to=\"/users\" className=\"waves-effect\"><i className=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i>All Users</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/tasks\" className=\"waves-effect\"><i className=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i>All Tasks</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/exercise\" className=\"waves-effect\"><i className=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i>All Exercise</Link>\n                        </li>\n                        <li>\n                            {/* <a href=\"fontawesome.html\" className=\"waves-effect\"><i className=\"fa fa-font fa-fw\" aria-hidden=\"true\"></i>Icons</a> */}\n                        </li>\n                        <li>\n                            {/* <a href=\"map-google.html\" className=\"waves-effect\"><i className=\"fa fa-globe fa-fw\" aria-hidden=\"true\"></i>Google Map</a> */}\n                        </li>\n                        <li>\n                            {/* <a href=\"blank.html\" className=\"waves-effect\"><i className=\"fa fa-columns fa-fw\" aria-hidden=\"true\"></i>Blank Page</a> */}\n                        </li>\n                        <li>\n                            {/* <a href=\"404.html\" className=\"waves-effect\"><i className=\"fa fa-info-circle fa-fw\" aria-hidden=\"true\"></i>Error 404</a> */}\n                        </li>\n\n                    </ul>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Sidebar;","import React, {Component} from 'react';\n// import input from 'react-bootstrap'\n\nclass Footer extends Component {\n    render(){\n        return (\n            \n            <footer className=\"footer text-center\"> 2017 &copy; Ample Admin brought to you by wrappixel.com </footer>\n        )\n    }\n}\n\n\nexport default Footer;","import React, { Component } from 'react'\nimport Header from '../Header'\nimport Sidebar from '../Sidebar'\nimport Services from '../../utility/core.api'\nimport Footer from '../Footer'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\n// import { BrowserRouter, Route } from 'react-router-dom'\n\n\nclass User extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={\n            userListData: []\n        }\n    }\n\n    componentDidMount(){\n        this.checkIfTokenAvailable()\n        this.userlist()\n    }\n\n    checkIfTokenAvailable = async() => {\n        if(!await localStorage.getItem(\"token\")){\n            this.props.history.push('/')\n        }\n    }\n\n    userlist = async() => {\n        try {\n            const token = localStorage.getItem(\"token\")\n            const response = await new Services().userList(token)\n            // console.log('response', response.data.data)\n            if(response.status === 200)\n            {\n                this.setState({\n                    userListData: response.data.data\n                })\n            }\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n    renderTheUserListingData = (userListArray) => {\n        return userListArray.map( (current, index) => {\n            // console.log('index', index)\n            return (\n                    <tr key={index}>\n                        <td>\n                        <img src={ current.picture } className=\"mr-2\" alt={current.name} height=\"50px\" width=\"50px\"/><b><code> {current.name} </code> </b></td>\n                        <td>{ current.email }</td>\n                        <td>{ current.phone }</td>\n                        <td>{ current.role }</td>\n                        <td>{ current.address }</td>\n                        <td>{ moment(current.createdAt).format(\"D MMM, YYYY\") }</td>\n                    </tr>\n            )\n        })\n    }\n\n    render(){\n        return (\n            <div>\n            <Header />\n            <Sidebar />\n                <div id=\"page-wrapper\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row bg-title\">\n                            <div className=\"col-lg-3 col-md-4 col-sm-4 col-xs-12\">\n                                <h4 className=\"page-title\">All Users</h4>\n                            </div>\n                            <div className=\"col-lg-9 col-sm-8 col-md-8 col-xs-12\">\n                                <ol className=\"breadcrumb\">\n                                        <li><Link to=\"/\">Home</Link></li>\n                                    <li className=\"active\">Users</li>\n                                </ol>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <div className=\"white-box\">\n                                    <h3 className=\"box-title\">Display All Users</h3>\n                                    <div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <thead>\n                                                <tr>\n                                                    <th><code>Name</code></th>\n                                                    <th>Email</th>\n                                                    <th>Phone Number</th>\n                                                    <th>Role</th>\n                                                    <th>Address</th>\n                                                    <th>Created Date</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.renderTheUserListingData(this.state.userListData)}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Footer/>\n                </div>          \n            </div>\n\n        )\n    }\n\n}\n\n\n\nexport default User","import React, { Component } from 'react'\nimport Header from '../Header'\nimport Sidebar from '../Sidebar'\nimport Footer from '../Footer'\nimport Services from '../../utility/core.api'\nimport moment from 'moment'\nimport {button} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Task extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={\n            taskListData: []\n        }       \n    }\n\n    componentDidMount(){\n        this.checkIfTokenAvailable()\n        this.tasklist()\n    }\n\n    checkIfTokenAvailable = async() => {\n        if(!await localStorage.getItem(\"token\"))\n        {\n            this.props.history.push('/')\n        }\n    }\n\n    tasklist = async() => {\n        try {\n            const token = localStorage.getItem(\"token\")\n            const response = await new Services().taskList(token)\n            // console.log('response', response.data.data)\n            if(response.status === 200)\n            {\n                this.setState({\n                    taskListData: response.data.data\n                })\n            }\n        } catch (e) {\n            console.log('error is', e)\n        }\n    }\n\n    /*** Delete Task***/\n    DeleteTaskRow = async(value) => {\n        const token = localStorage.getItem(\"token\")\n        const params = {task_id: value}\n        const response = await new Services(params).deleteTask(token)\n        if(response.status === 200)\n        {\n            this.tasklist()\n            toast.warning(response.data.msg);\n        }\n        \n    }\n\n    renderTheTaskListing = (taskListArray) => {\n        return taskListArray.map( (current, index) => {\n\n            // console.log(current.user.picture)\n            return (\n                    <tr key={index}>\n                        <td> <img src={ (current.user.picture) ? current.user.picture : 'image/dummy.png' } className=\"mr-2\" alt=\"\" height=\"50px\" width=\"50px\"/> {current.user.name }</td>\n                        <td><img src={ (current.sender.picture) ? current.sender.picture : 'image/dummy.png' } className=\"mr-2\" alt=\"\" height=\"50px\" width=\"50px\"/> {current.sender.name }</td>\n                        <td><b>{ current.title.toUpperCase() }</b></td>\n                        <td>{ moment(current.start_date).format(\"D MMM, YYYY\") }</td>\n                        <td>{ current.start_time } | { current.end_time }</td>\n                        <td>{ current.type.toUpperCase() }</td>\n                        <td>{ moment(current.createdAt).format(\"D MMM, YYYY\") }</td>\n                        <td>{ current.status.toUpperCase() }</td>\n                        <td><button value={current._id} className=\"btn btn-danger btn-xs\" onClick={\n                            (e) => {\n                                this.DeleteTaskRow(e.target.value)\n                            }\n                        }>Delete</button></td>\n                    </tr>\n            )\n        })\n    }\n    \n\n    render(){\n        return(\n            <>\n            <div>\n                <Header />\n                <Sidebar />\n                <ToastContainer />\n                <div id=\"page-wrapper\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row bg-title\">\n                            <div className=\"col-lg-3 col-md-4 col-sm-4 col-xs-12\">\n                                <h4 className=\"page-title\">All Task</h4>\n                            </div>\n                            <div className=\"col-lg-9 col-sm-8 col-md-8 col-xs-12\">\n                                <ol className=\"breadcrumb\">\n                                <li><Link to=\"/\">Home</Link></li>\n                                    <li className=\"active\">Tasks</li>\n                                </ol>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <div className=\"white-box\">\n                                    <h3 className=\"box-title\">Display All Tasks</h3>\n                                    {/* <p className=\"text-muted\">Add class <code>.table</code></p> */}\n                                    <div className=\"table-responsive\">\n                                        <table className=\"table\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Name</th>\n                                                    <th><b>to</b> Sender</th>\n                                                    <th>Title</th>\n                                                    <th>Task Date</th>\n                                                    <th width=\"15%\">Start Time | End Time</th>\n                                                    <th>Type</th>\n                                                    <th>Created Date</th>\n                                                    <th>Status</th>\n                                                    <th>Action</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                { this.renderTheTaskListing(this.state.taskListData) }\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <Footer/>\n                </div>                \n            </div>\n            </>\n        )\n    }\n}\n\nexport default Task","import React, { Component } from 'react'\nimport Header from '../Header'\nimport Sidebar from '../Sidebar'\nimport Services from '../../utility/core.api'\nimport Footer from '../Footer'\n// import moment from 'moment'\nimport { Form, Button } from 'react-bootstrap'\nimport FileBase64 from 'react-file-base64';\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nclass Profile extends Component {\n\n    constructor(props){\n        super(props)\n            this.state={\n                profile: {},\n                name: '',\n                email: '',\n                phone: '',\n                picture: '',\n                address: ''\n            }\n        }\n\n        componentWillMount(){\n            this.checkIfTokenAvailable()\n            this.getprofiledata()\n        }\n    \n        checkIfTokenAvailable = async() => {\n            if(!await localStorage.getItem(\"token\")){\n                this.props.history.push('/')\n            }\n        }\n\n        getFiles(files){\n            const base64 = files.base64.split('base64,')[1]\n            this.setState({ picture: base64 })\n        }\n\n        getprofiledata = async() => {\n            try {\n                const token = localStorage.getItem(\"token\");\n                const response = await new Services().getProfile(token)\n                // console.log('response', response)\n                if(response.status === 200){\n                    this.setState({\n                        // profile : response.data.data\n                        name: response.data.data.name,\n                        email: response.data.data.email,\n                        phone: response.data.data.phone,\n                        picture: response.data.data.picture,\n                        address: response.data.data.address\n                    })\n                }\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        renderTheProfileImage = (profileObject) => {\n            return (\n                <>\n                    <div className=\"white-box\">\n                        <div className=\"user-bg\"> <img width=\"100%\" alt=\"user\" src=\"logo.jpg\"></img>\n                            <div className=\"overlay-box\">\n                                <div className=\"user-content\">\n                                    <Link to=\"/profile\"><img src={ (this.state.picture) ? this.state.picture : 'image/dummy.png' }\n                                            className=\"thumb-lg img-circle\" alt=\"img\"></img></Link>\n                                    <h4 className=\"text-white\">{this.state.name}</h4>\n                                    <h5 className=\"text-white\">{this.state.email}</h5>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"user-btm-box\">\n                            <div className=\"col-md-4 col-sm-4 text-center\">\n                                <p className=\"text-purple\"><i className=\"ti-facebook\"></i></p>\n                                <h1>258</h1>\n                            </div>\n                            <div className=\"col-md-4 col-sm-4 text-center\">\n                                <p className=\"text-blue\"><i className=\"ti-twitter\"></i></p>\n                                <h1>125</h1>\n                            </div>\n                            <div className=\"col-md-4 col-sm-4 text-center\">\n                                <p className=\"text-danger\"><i className=\"ti-dribbble\"></i></p>\n                                <h1>556</h1>\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )\n        }\n\n        changeTheValueInput = async(value, type) => {\n            if(type === 'name'){\n                this.setState({ name: value })\n            }\n            else if(type === 'email'){\n                this.setState({email: value})\n            }\n            else if(type === 'phone'){\n                this.setState({phone: value})\n            }\n            else if(type === 'picture'){\n                this.setState({picture: value})\n            }\n            else if(type === 'address'){\n                this.setState({address: value})\n            }\n            else{\n                return\n            }\n        }\n\n        UpdateProfile = async() => {\n            try{\n                const token = localStorage.getItem(\"token\")\n                const params = { newName: this.state.name, newAddress: this.state.address, newPhone: this.state.phone, newPicture: this.state.picture }\n                const response = await new Services(params).editProfile(token)\n                toast.warning(response.data.msg);\n                // console.log('res', params)\n                if(response.status === 200){\n                    if(response.data.msg === 'profile successfully updated'){\n                        this.getprofiledata()\n                        // this.renderTheProfileImage(this.state.profile)\n                        window.location.reload();\n                        // this.props.history.push('/profile')\n                    }\n                }\n            }\n            catch(e){\n                console.log(e)\n    \n            }\n        }\n\n        renderTheProfileData = (profileObject) => {\n            return (\n                <>\n                    <Form.Group controlId=\"formBasicName\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>User Name</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <Form.Control type=\"text\" defaultValue={this.state.name} placeholder=\"Enter username\" onChange={\n                                (e) => {\n                                    this.changeTheValueInput(e.target.value, 'name')\n                                }\n                            } />\n                        </div>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Email address</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <Form.Control type=\"email\" defaultValue={this.state.email} placeholder=\"Enter email\" onChange={\n                                (e) => {\n                                    this.changeTheValueInput(e.target.value, 'email')\n                                }\n                            } />\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email with anyone else.\n                            </Form.Text>\n                        </div>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPhone\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Phone Number</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            \n                            <Form.Control type=\"text\" defaultValue={this.state.phone} placeholder=\"Enter Phone Number\" onChange={\n                                (e) => {\n                                    this.changeTheValueInput(e.target.value, 'phone')\n                                }\n                            } />\n                        </div>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPicture\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Profile Picture</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <FileBase64 \n                            multiple = { false }\n                            onDone = { this.getFiles.bind(this) } \n                            />\n                        </div>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicAddress\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Address</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <textarea rows=\"5\" className=\"form-control form-control-line\" defaultValue={this.state.address} onChange={\n                                (e) => {\n                                    this.changeTheValueInput(e.target.value, 'address')\n                                }\n                            }></textarea>\n                        </div>\n                    </Form.Group>\n\n                    <Button className=\"btn btn-success\" variant=\"primary\" onClick={this.UpdateProfile}>\n                        Update Profile\n                    </Button>\n                </>\n            )\n        }\n\n        render(){\n            return (\n                <>\n                    <Header />\n                    <Sidebar />\n                    <ToastContainer />\n                    <div id=\"page-wrapper\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row bg-title\">\n                                <div className=\"col-lg-3 col-md-4 col-sm-4 col-xs-12\">\n                                    <h4 className=\"page-title\">Profile page</h4>\n                                </div>\n                                <div className=\"col-lg-9 col-sm-8 col-md-8 col-xs-12\">\n                                    <ol className=\"breadcrumb\">\n                                        <li><Link to=\"/\">Home</Link></li>\n                                        <li className=\"active\">Profile Page</li>\n                                    </ol>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-4 col-xs-12\">\n                                    { this.renderTheProfileImage(this.state.profile) }\n                                </div>\n                                <div className=\"col-md-8 col-xs-12\">\n                                    <div className=\"white-box\">\n                                        <div className=\"form-horizontal form-material\">\n                                            { this.renderTheProfileData(this.state.profile) }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <Footer />\n                    </div>\n                </>\n            )\n        }\n\n    \n\n}\n\nexport default Profile","import React, { Component } from 'react'\nimport Header from '../Header'\nimport Sidebar from '../Sidebar'\nimport Footer from '../Footer'\nimport Services from '../../utility/core.api'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\n\nclass Exercise extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            exerciseListData: []\n        }\n    }\n\n    componentDidMount(){\n        this.checkIfTokenAvailable()\n        this.exerciselist()\n\n    }\n\n    checkIfTokenAvailable = async() => {\n        if(!await localStorage.getItem(\"token\"))\n        {\n            this.props.history.push('/')\n        }\n    }\n\n    exerciselist = async() => {\n        try {\n            const token = localStorage.getItem(\"token\")\n            const response = await new Services().exerciseList(token)\n            if(response.status === 200)\n            {\n                this.setState({\n                    exerciseListData: response.data.data\n                })\n            }\n            \n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    renderTheExerciseListing = (exerciseListArray) => {\n        return exerciseListArray.map( (exerciseObject, index)  => {\n            return(\n                    <tr key={index}>\n                        <td><img src={ exerciseObject.logo } width=\"70px\" height=\"40px\" alt={ exerciseObject.title } /> { exerciseObject.title }</td>\n                        <td>{ exerciseObject.description }</td>\n                        <td>{ moment(exerciseObject.createdAt).format(\"D MMM, YYYY\") }</td>\n                        {/* <td>{ exerciseObject.status }</td> */}\n                        <td><Link className=\"btn btn-primary btn-xs\" to={`/updateexercise/${exerciseObject._id}`}>Update</Link></td>\n                    </tr>\n            )\n        })\n        \n    }\n\n    render() {\n        return (\n            <>\n            <Header />\n            <Sidebar />\n\n            <div id=\"page-wrapper\">\n                <div className=\"container-fluid\">\n                    <div className=\"row bg-title\">\n                        <div className=\"col-lg-3 col-md-4 col-sm-4 col-xs-12\">\n                            <h4 className=\"page-title\">All Exercise</h4>\n                        </div>\n                        <div className=\"col-lg-9 col-sm-8 col-md-8 col-xs-12\">\n                            <ol className=\"breadcrumb\">\n                                <li><Link to=\"/\">Home</Link></li>\n                                <li className=\"active\">Exercise</li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"white-box\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-8\">\n                                        <h3 className=\"box-title\">Display All Excercis</h3>\n                                    </div>\n                                    <div className=\"col-sm-4\">\n                                    <button className=\"btn btn-info btn-xs pull-right\" onClick={\n                                        () => {\n                                            this.props.history.push('/addexercise')\n                                        }\n                                    }>Add Exercise</button>\n                                    </div>\n                                </div>\n                                {/* <p className=\"text-muted\">Add class <code>.table</code></p> */}\n                                <div className=\"table-responsive\">\n                                    <table className=\"table\">\n                                        <thead>\n                                            <tr>\n                                                <th>Title</th>\n                                                <th>Description</th>\n                                                <th>Created Date</th>\n                                                {/* <th>Status</th> */}\n                                                <th>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            { this.renderTheExerciseListing(this.state.exerciseListData) }\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n            </>\n        )\n    }\n\n}\n\nexport default Exercise","import React, { Component } from 'react'\nimport Header from '../Header'\nimport Sidebar from '../Sidebar'\nimport Footer from '../Footer'\nimport Services from '../../utility/core.api'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport FileBase64 from 'react-file-base64';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass AddExercise extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            ExerciseList: {},\n            title: '',\n            description: '',\n            logo: ''\n        }\n    }\n\n    componentDidMount(){\n        this.checkIfTokenAvailable()\n    }\n\n    checkIfTokenAvailable = async() => {\n        if(!await localStorage.getItem(\"token\"))\n        {\n            this.props.history.push('/')\n        }\n    }\n\n    getFiles(files){\n        const base64 = files.base64.split('base64,')[1]\n        this.setState({ logo: base64 })\n    }\n    \n    changeTheValueInputt = async(value, type) => {\n        if( type === 'title'){\n            this.setState({title: value})\n        }\n        else if(type === 'description'){\n            this.setState({description: value})\n        }\n        else if(type === 'logo'){\n            this.setState({logo: value})\n        }\n    } \n\n    AddExercise = async() => {\n        try {\n            const token = localStorage.getItem(\"token\")\n            const params = { title: this.state.title, description: this.state.description, logo: this.state.logo }\n            const response = await new Services(params).addExercise(token)\n            console.log('response', response)\n            if(response.status === 200){\n                if(response.data.msg === 'successfully added')\n                {\n                    this.props.history.push('/exercise')\n                }\n                toast.warning(response.data.msg);\n            \n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    renderTheExerciseForm = (ExerciseObj) => {\n        return (\n                <div className=\"form-horizontal form-material\">\n                    <Form.Group controlId=\"formBasicName\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Title</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <Form.Control type=\"text\" defaultValue={this.state.title}  placeholder=\"Enter title\" onChange={\n                                (e) => {\n                                    this.changeTheValueInputt(e.target.value, 'title')\n                                }\n                            } />\n                        </div>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicDescription\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Description</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <textarea rows=\"5\" defaultValue={this.state.description} className=\"form-control form-control-line\" onChange={\n                                (e) => {\n                                    this.changeTheValueInputt(e.target.value, 'description')\n                                }\n                            }></textarea>\n                        </div>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicExerciseImage\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Exercise Picture</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <FileBase64 \n                            multiple = { false }\n                            onDone = { this.getFiles.bind(this) } \n                            />\n                        </div>\n                    </Form.Group>\n                    <Button className=\"btn btn-success\" variant=\"primary\" onClick={this.AddExercise}>\n                            Save\n                    </Button>\n                </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n            <Header />\n            <Sidebar />\n            <ToastContainer />\n            <div id=\"page-wrapper\">\n                <div className=\"container-fluid\">\n                    <div className=\"row bg-title\">\n                        <div className=\"col-lg-3 col-md-4 col-sm-4 col-xs-12\">\n                            <h4 className=\"page-title\">Add Exercise</h4>\n                        </div>\n                        <div className=\"col-lg-9 col-sm-8 col-md-8 col-xs-12\">\n                            <ol className=\"breadcrumb\">\n                                <li><Link to=\"/\">Home</Link></li>\n                                <li className=\"active\">Add Exercise</li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"white-box\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-8\">\n                                        <h3 className=\"box-title\">Add Excercis</h3>\n                                    </div>\n                                </div>\n                                {/* <p className=\"text-muted\">Add class <code>.table</code></p> */}\n                                <div className=\"table-responsive\">\n                                    <div className=\"white-box\">\n                                        {this.renderTheExerciseForm(this.state.ExerciseList)}\n                                    </div>                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n            </div>\n        )\n    }\n\n}\n\nexport default AddExercise","import React, { Component } from 'react'\nimport Header from '../Header'\nimport Sidebar from '../Sidebar'\nimport Footer from '../Footer'\nimport Services from '../../utility/core.api'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport FileBase64 from 'react-file-base64';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass UpdateExercise extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            exercise_id: this.props.match.params.exerciseId,\n            ExerciseView: {},\n            title: '',\n            description: '',\n            logo: ''\n        }\n    }\n\n    componentDidMount(){\n        this.checkIfTokenAvailable()\n        this.ExerciseView()\n        // console.log(this.props.match.params.exerciseId)\n    }\n\n    checkIfTokenAvailable = async() => {\n        if(!await localStorage.getItem(\"token\"))\n        {\n            this.props.history.push('/')\n        }\n    }\n    \n\n    getFiles(files){\n        const base64 = files.base64.split('base64,')[1]\n        this.setState({ logo: base64 })\n    }\n    \n    changeTheValueInputt = async(value, type) => {\n        if( type === 'title'){\n            this.setState({title: value})\n        }\n        else if(type === 'description'){\n            this.setState({description: value})\n        }\n        else if(type === 'logo'){\n            this.setState({logo: value})\n        }\n    } \n\n    ExerciseView = async() => {\n        try {\n            const token = localStorage.getItem(\"token\")\n            const params = { exercise_id: this.state.exercise_id}\n            // console.log(params)\n            const response = await new Services(params).exerciseView(token)\n            // console.log('response', response)\n            if(response.status === 200){\n                this.setState({\n                    // ExerciseView: response.data.data\n                    title: response.data.data.title,\n                    description: response.data.data.description,\n                    logo: response.data.data.logo\n                })\n            }\n        } catch (e) {\n            console.log(e)\n            \n        }\n    }\n\n    UpdateExercise = async() => {\n        try{\n            const token = localStorage.getItem(\"token\")\n            const params = { title_id: this.state.exercise_id, newTitle: this.state.title, newDescription: this.state.description, newLogo: this.state.logo }\n            const response = await new Services(params).updateExercise(token)\n            toast.warning(response.data.msg);\n            if(response.status === 200){\n                if(response.data.msg === 'successfully updated'){\n                    console.log(response.data.data)\n                    this.ExerciseView()\n                    this.props.history.push('/exercise')\n                }\n            }\n        }\n        catch(e){\n            console.log(e)\n\n        }\n    }\n\n    renderTheExerciseForm = (ExerciseObj) => {\n        // console.log('check', ExerciseObj)\n        return (\n            <>\n                <div className=\"form-horizontal form-material\">\n                    <Form.Group controlId=\"formBasicName\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Title</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <Form.Control type=\"text\" defaultValue={this.state.title}  placeholder=\"Enter title\" onChange={\n                                (e) => {\n                                    this.changeTheValueInputt(e.target.value, 'title')\n                                }\n                            } />\n                        </div>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicDescription\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Description</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <textarea rows=\"5\" defaultValue={this.state.description} className=\"form-control form-control-line\" onChange={\n                                (e) => {\n                                    this.changeTheValueInputt(e.target.value, 'description')\n                                }\n                            }></textarea>\n                        </div>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicExerciseImage\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Exercise Picture</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <FileBase64 \n                            multiple = { false }\n                            onDone = { this.getFiles.bind(this) } \n                            />\n                        </div>\n                    </Form.Group>\n                    <Button className=\"btn btn-success\" variant=\"primary\" onClick={this.UpdateExercise}>\n                            Update\n                    </Button>\n                </div>\n            </>\n        )\n    }\n\n    render() {\n        return (\n            <>\n            <Header />\n            <Sidebar />\n\n            <ToastContainer />\n            <div id=\"page-wrapper\">\n                <div className=\"container-fluid\">\n                    <div className=\"row bg-title\">\n                        <div className=\"col-lg-3 col-md-4 col-sm-4 col-xs-12\">\n                            <h4 className=\"page-title\">Update <b>({this.state.title})</b>  </h4>\n                        </div>\n                        <div className=\"col-lg-9 col-sm-8 col-md-8 col-xs-12\">\n                            <ol className=\"breadcrumb\">\n                                <li><Link to=\"/\">Home</Link></li>\n                                <li className=\"active\">Update Exercise</li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"white-box\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-8\">\n                                        <h3 className=\"box-title\">Add Excercis</h3>\n                                    </div>\n                                </div>\n                                {/* <p className=\"text-muted\">Add class <code>.table</code></p> */}\n                                <div className=\"table-responsive\">\n                                    <div className=\"white-box\">\n                                        {this.renderTheExerciseForm(this.state.ExerciseView)}\n                                    </div>                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n            </>\n        )\n    }\n\n}\n\nexport default UpdateExercise","import React, { Component } from 'react'\nimport Services from '../utility/core.api'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nclass Login extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            email:'',\n            password:''\n        }\n    }\n\n    componentDidMount = async() => {\n        if(await localStorage.getItem('token')){\n                this.props.history.push('/users')\n        }\n    }\n\n    setEmail = (data) => {\n        this.setState({\n            email: data\n        })\n    }\n\n    setPassword = (data) => {\n        this.setState({\n            password: data\n        })\n    }\n\n    logIn = async() => {\n        try {\n            const params = {\n                email: this.state.email,\n                password: this.state.password\n            }\n            // console.log('params', params)\n            const response = await new Services(params).loginAdmin();\n            // console.log('response', response)\n            if(response.status === 200){\n                // console.log(\"repsonse after login is\", response.data.msg)\n                toast.warning(response.data.msg);\n                if(response.data.status){\n                    // console.log('token', response.data.token)\n                    localStorage.setItem(\"token\", response.data.token)\n                    this.props.history.push('/users')\n                }\n\n            }\n\n        } catch (e) {\n\n            console.log('err is ', e)\n\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n            <ToastContainer />\n            <div className=\"container-fluid page-body-wrapper full-page-wrapper\">\n                <div className=\"content-wrapper d-flex align-items-center auth\">\n                <div className=\"row flex-grow\">\n                    <div className=\"col-lg-4 col-lg-offset-4\">\n                    <div className=\"auth-form-light text-left p-5\">\n                        <div className=\"brand-logo\">\n                        <img src=\"logo.jpg\" alt=\"GYM Fitness\" />\n                        </div>\n                        <h4>Hello! let's get started</h4>\n                        <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n                        <div className=\"form-group\">\n                            <input type=\"email\" className=\"form-control form-control-lg\" id=\"exampleInputEmail1\" placeholder=\"Email Address\" onChange={\n                                (e) => {\n                                    this.setEmail(e.target.value)\n                                }\n                            }\n                             />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" className=\"form-control form-control-lg\" id=\"exampleInputPassword1\" placeholder=\"Password\" onChange={\n                                (e) => {\n                                    this.setPassword(e.target.value)\n                                }\n                            }/>\n                        </div>\n                        <div className=\"mt-3\">\n                            <button className=\"btn btn-block btn-gradient-primary btn-lg font-weight-medium auth-form-btn\" onClick={\n                                () => {\n                                    this.logIn()\n                                }\n                            }>SIGN IN</button>\n                        </div>\n                        <div className=\"my-2 d-flex justify-content-between align-items-center\">\n                            <div className=\"form-check\">\n                            {/* <label className=\"form-check-label text-muted\">\n                                <input type=\"checkbox\" className=\"form-check-input\" /> Keep me signed in </label> */}\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </>\n        )\n    }\n\n}\n\nexport default Login","import React, { Component } from 'react'\nimport Header from '../Header'\nimport Sidebar from '../Sidebar'\nimport Services from '../../utility/core.api'\nimport Footer from '../Footer'\n// import moment from 'moment'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\nclass ChangePassword extends Component {\n\n    constructor(props){\n        super(props)\n            this.state={\n                oldpassword: '',\n                newpassword: '',\n                confirmpassword: '',\n            }\n        }\n        \n\n        componentWillMount(){\n            this.checkIfTokenAvailable()\n\n\n        }\n    \n        checkIfTokenAvailable = async() => {\n            if(!await localStorage.getItem(\"token\")){\n                this.props.history.push('/')\n            }\n        }\n\n\n        changeTheValueInput = async(value, type) => {\n            if(type === 'oldpassword'){\n                this.setState({ oldpassword: value })\n            }\n            else if(type === 'newpassword'){\n                this.setState({newpassword: value})\n            }\n            else if(type === 'confirmpassword'){\n                this.setState({confirmpassword: value})\n            }\n            else{\n                return\n            }\n        }\n\n        UpdatePassword = async() => {\n            const token = localStorage.getItem(\"token\")\n            const parames = { oldPassword: this.state.oldpassword, newPassword: this.state.newpassword, confirmPassword: this.state.confirmpassword }\n            const response = await new Services(parames).changePassword(token)\n            console.log('response', response)\n            if(response.status === 200){\n                if(response.data.status)\n                {\n                    this.props.history.push('/profile')\n                    toast.success(response.data.msg);\n                }\n                else{\n                    toast.warning(response.data.msg);\n                }\n\n            }\n        }\n\n        renderTheProfileData = (profileObject) => {\n            return (\n                <>\n                    <ToastContainer />\n                    <Form.Group controlId=\"formBasicOldPassword\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Old Password</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <Form.Control type=\"password\" defaultValue={this.state.oldpassword} placeholder=\"Enter old password\" onChange={\n                                (e) => {\n                                    this.changeTheValueInput(e.target.value, 'oldpassword')\n                                }\n                            } />\n                        </div>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicNewPwd\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>New Password</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <Form.Control type=\"password\" defaultValue={this.state.newpassword} placeholder=\"Enter new password\" onChange={\n                                (e) => {\n                                    this.changeTheValueInput(e.target.value, 'newpassword')\n                                }\n                            } />\n                        </div>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCnfPwd\">\n                        <label className=\"col-md-12\">\n                            <Form.Label>Confirm Password</Form.Label>\n                        </label>\n                        <div className=\"col-md-12\">\n                            <Form.Control type=\"password\" defaultValue={this.state.confirmpassword} placeholder=\"Enter confirm password\" onChange={\n                                (e) => {\n                                    this.changeTheValueInput(e.target.value, 'confirmpassword')\n                                }\n                            } />\n                        </div>\n                    </Form.Group>\n\n                    <Button className=\"btn btn-success\" variant=\"primary\" onClick={this.UpdatePassword}>\n                        Update Password\n                    </Button>\n                </>\n            )\n        }\n\n        render(){\n            return (\n                <>\n                    <Header />\n                    <Sidebar />\n                    <div id=\"page-wrapper\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row bg-title\">\n                                <div className=\"col-lg-3 col-md-4 col-sm-4 col-xs-12\">\n                                    <h4 className=\"page-title\">Change Password</h4>\n                                </div>\n                                <div className=\"col-lg-9 col-sm-8 col-md-8 col-xs-12\">\n                                    <ol className=\"breadcrumb\">\n                                        <li><Link to=\"/\">Home</Link></li>\n                                        <li className=\"active\">Change Password</li>\n                                    </ol>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-2\"></div>\n                                <div className=\"col-md-8\">\n                                    <div className=\"white-box\">\n                                        <div className=\"form-horizontal form-material\">\n                                            { this.renderTheProfileData(this.state.profile) }\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-2\"></div>\n                            </div>\n                        </div>\n                        <Footer />\n                    </div>\n                </>\n            )\n        }\n\n    \n\n}\n\nexport default ChangePassword","// App.js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport User from './components/users/User'\nimport Task from './components/tasks/Task'\nimport Profile from './components/users/Profile'\nimport Exercise from './components/exercises/Exercise'\nimport AddExercise from './components/exercises/AddExercise'\nimport UpdateExercise from './components/exercises/UpdateExercise'\n\nimport Login from './components/Login'\nimport ChangePassword from './components/users/ChangePassword';\n\nclass App extends Component{\n\n  render() {\n    return (\n        <BrowserRouter>\n        <Route exact path='/' component={Login} />\n        <Route exact path='/users' component={User} />\n        <Route exact path='/tasks' component={Task} />\n        <Route exact path='/profile' component={Profile} />\n        <Route exact path='/exercise' component={Exercise} />\n        <Route exact path='/addexercise' component={AddExercise} />\n        <Route exact path='/updateexercise/:exerciseId' component={UpdateExercise} />\n        <Route exact path='/changepassword' component={ChangePassword} />\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}